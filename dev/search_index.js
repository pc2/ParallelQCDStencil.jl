var documenterSearchIndex = {"docs":
[{"location":"references/exports/#All-Exports","page":"All Exports","title":"All Exports","text":"","category":"section"},{"location":"references/exports/#Index","page":"All Exports","title":"Index","text":"","category":"section"},{"location":"references/exports/","page":"All Exports","title":"All Exports","text":"Pages   = [\"exports.md\"]\nOrder   = [:function, :type]","category":"page"},{"location":"references/exports/#References","page":"All Exports","title":"References","text":"","category":"section"},{"location":"references/exports/","page":"All Exports","title":"All Exports","text":"Modules = [ParallelQCDStencil]\nPrivate = false","category":"page"},{"location":"references/exports/#ParallelQCDStencil.ComputationMode","page":"All Exports","title":"ParallelQCDStencil.ComputationMode","text":"Computation mode for selection between serial or parallel computation.\n\n\n\n\n\n","category":"type"},{"location":"references/exports/#ParallelQCDStencil.StencilPara","page":"All Exports","title":"ParallelQCDStencil.StencilPara","text":"Struct with default values\n\n\n\n\n\n","category":"type"},{"location":"references/exports/#ParallelQCDStencil.compute_stencil-Tuple{Any, Any, MPI.Comm, Int64, LocalGridNaive}","page":"All Exports","title":"ParallelQCDStencil.compute_stencil","text":"Compute stencil in parallel\n\n\n\n\n\n","category":"method"},{"location":"references/exports/#ParallelQCDStencil.compute_stencil-Tuple{Any, Any, Sequential}","page":"All Exports","title":"ParallelQCDStencil.compute_stencil","text":"Compute stencil in serial\n\n\n\n\n\n","category":"method"},{"location":"references/exports/#ParallelQCDStencil.get_site_link_indexes-Tuple{Any, Any}","page":"All Exports","title":"ParallelQCDStencil.get_site_link_indexes","text":"Computes the site link indexes\n\n\n\n\n\n","category":"method"},{"location":"references/exports/#ParallelQCDStencil.linear_link_values_to_site_based_array-Tuple{Any, Any}","page":"All Exports","title":"ParallelQCDStencil.linear_link_values_to_site_based_array","text":"Converting the link/file data into site centric structure\n\n\n\n\n\n","category":"method"},{"location":"#ParallelQCDStencil.jl","page":"ParallelQCDStencil","title":"ParallelQCDStencil.jl","text":"","category":"section"},{"location":"#Installation","page":"ParallelQCDStencil","title":"Installation","text":"","category":"section"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"] add https://git.uni-paderborn.de/cs-hit/theses/2022_parab/qcd-stencil/ParallelQCDStencil.jl","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"Note: The minimal required Julia version is 1.7.","category":"page"},{"location":"#Usage","page":"ParallelQCDStencil","title":"Usage","text":"","category":"section"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"julia> using ParallelQCDStencil","category":"page"},{"location":"#Input-parameters","page":"ParallelQCDStencil","title":"Input parameters","text":"","category":"section"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"We are using struct for passing around the parameters to the fuctions. It consists of :","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"d = 2                           #diamensions\nL = 5                           #number of lattices in per diamension\nN = L^d                         #number of sites\nNL = N * d                      #number of links\nLD = 3                          #link matrix length\nC1::T = 2                 #stencil constant \nC2::T = 3                 #stencil constant   \nLG = 2                          #local grid length\nn_LG_d = Int(floor(L / LG))     #grids per diamension\nn_LG = n_LG_d^d                 #number of local grids\nmaster_rank = 0                 #mpi master rank","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"The struct can be construced using :","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"p = StencilPara(; d=2, L=4, LG=2, master_rank=0)","category":"page"},{"location":"#Basic-Example","page":"ParallelQCDStencil","title":"Basic Example","text":"","category":"section"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"An example with random input data.  ","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"#basic_example.jl\nusing ParallelQCDStencil\nusing MPI\nusing Parameters\nusing LinearAlgebra\n\np = StencilPara(; d=2, L=4, LG=2, master_rank=0)\n@unpack NL, master_rank, C1, C2, N = p\nMPI.Init()\ncomm = MPI.COMM_WORLD\nrank = MPI.Comm_rank(comm)\nif (rank == master_rank)\n    rmat = rand(ComplexF64,(3,3))  \n    data = [rmat for i in 1:NL]\nelse\n    data = nothing\nend\ntotal = compute_stencil(p, data, comm, rank, LocalGridNaive())\nif (rank == master_rank)\n    println(\"total:$(total)\\n\")\nend\nMPI.Finalize()","category":"page"},{"location":"#Code-execution","page":"ParallelQCDStencil","title":"Code execution","text":"","category":"section"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"The program can be launched using MPI command e.g:","category":"page"},{"location":"","page":"ParallelQCDStencil","title":"ParallelQCDStencil","text":"mpirun -n 4 julia --project basic_example.jl","category":"page"}]
}
